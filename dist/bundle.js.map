{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAe;AACf;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCpDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN8B;AACR;AACI;AAC1B;AACA,MAAM,oCAAoC;AAC1C,MAAM,sCAAsC;AAC5C,MAAM,yBAAyB;AAC/B,MAAM,6CAA6C;AACnD,MAAM,iCAAiC;AACvC,MAAM,uCAAuC;AAC7C,MAAM,oCAAoC;AAC1C,MAAM,6BAA6B;AACnC,MAAM,0BAA0B;AAChC,MAAM,qCAAqC;AAC3C,MAAM,oCAAoC;AAC1C,MAAM,mCAAmC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA,wCAAwC,+CAAM,MAAM,WAAW;AAC/D;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK,GAAG,GAAG,cAAc,IAAI,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,cAAc;AACvD;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,wBAAwB,kBAAkB;AAC1C,gCAAgC,+CAAM,MAAM,EAAE;AAC9C;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,iCAAiC,+CAAM,MAAM,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-aquarium/./src/styles.css?1553","webpack://my-aquarium/./src/living.ts","webpack://my-aquarium/webpack/bootstrap","webpack://my-aquarium/webpack/runtime/define property getters","webpack://my-aquarium/webpack/runtime/hasOwnProperty shorthand","webpack://my-aquarium/webpack/runtime/make namespace object","webpack://my-aquarium/./src/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export default class Living {\n    constructor(src, width, height) {\n        this.addCount = ({ isTrue }) => {\n            this._count += isTrue ? 1 : -1;\n        };\n        this._name = src;\n        this._image = new Image();\n        this._image.src = `./assets/${src}.png`;\n        this._width = width;\n        this._height = height;\n        this._x = 0;\n        this._y = 0;\n        this._random = Math.random();\n        this._isRight = true;\n        this._count = 0;\n    }\n    get image() {\n        return this._image;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get random() {\n        return this._random;\n    }\n    get isRight() {\n        return this._isRight;\n    }\n    get count() {\n        return this._count;\n    }\n    get name() {\n        return this._name;\n    }\n    set x(x) {\n        this._x = x;\n    }\n    set y(y) {\n        this._y = y;\n    }\n    set isRight(isRight) {\n        this._isRight = isRight;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Living from './living';\nimport './styles.css';\nimport '../assets/**.png';\nconst fList = [\n    { id: 'f-0', name: 'Hadal snailfish' },\n    { id: 'f-1', name: 'Perca fluviatilis' },\n    { id: 'f-2', name: 'Tuna' },\n    { id: 'f-3', name: 'Brownbanded bamboo shark' },\n    { id: 'f-4', name: 'Convict fish' },\n    { id: 'f-5', name: 'Splendid alfonsino' },\n    { id: 'f-6', name: 'Leafy seadragon' },\n    { id: 'f-7', name: 'Sun fish' },\n    { id: 'f-8', name: 'Squid' },\n    { id: 'f-9', name: 'Sand tiger shark' },\n    { id: 'f-10', name: 'Japanese smelt' },\n    { id: 'f-11', name: 'Porcupinefish' },\n];\nclass Main {\n    constructor() {\n        this._fps = 30;\n        this._fileNumber = 12;\n        this._fish = [];\n        this._grass = [];\n        this._volume = 3;\n        this.inputChange = (event) => {\n            if (!(event.target instanceof HTMLInputElement)) {\n                return;\n            }\n            const value = Number(event.target.value);\n            if (value > this._volume) {\n                for (let i = this._volume; i < value; i++) {\n                    const iNormalize = i % this._fileNumber;\n                    const randomSize = Math.random() * 100;\n                    this._fish.push(new Living(`f-${iNormalize}`, randomSize, randomSize));\n                }\n            }\n            else if (value < this._volume) {\n                for (let i = this._volume; i > value; i--) {\n                    this._fish.pop();\n                }\n            }\n            const fNumber = document.getElementById('f-number');\n            fNumber.innerHTML = value + '';\n            this.renderFishInfo();\n            this._volume = value;\n        };\n        this.renderFishInfo = () => {\n            const list = new Array(this._fileNumber);\n            list.fill(0);\n            this._fish.forEach((f) => {\n                const number = Number(f.name.replace(/[^0-9]/g, ''));\n                list[number] = list[number] + 1;\n            });\n            const ul = document.getElementById('f-ul');\n            ul.innerHTML = '';\n            let i = 0;\n            for (const l of list) {\n                if (l === 0) {\n                    continue;\n                }\n                ul.innerHTML += `<li id={li-${i}}>${fList[i].name}: ${l}</li>`;\n                i++;\n            }\n        };\n        this.render = () => {\n            const animation = () => {\n                setTimeout(() => {\n                    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height); // clear canvas\n                    this._grass.forEach((g) => {\n                        const randomX = g.random * this._canvas.width;\n                        this._ctx.drawImage(g.image, randomX, this._canvas.height - g.height, g.width, g.height);\n                    });\n                    this._fish.forEach((f) => {\n                        const randomY = f.random * this._canvas.height;\n                        const random = randomY % 20;\n                        this._ctx.translate(0, randomY);\n                        if (f.isRight && f.x < this._canvas.width) {\n                            const rad = ((f.count * Math.PI) / 180) * random;\n                            f.x = rad * random;\n                            f.y = Math.sin(rad) * random;\n                            this._ctx.translate(f.x, f.y);\n                            this._ctx.scale(-1, 1);\n                            f.addCount({ isTrue: true });\n                        }\n                        else if (f.x > 0) {\n                            f.addCount({ isTrue: false });\n                            f.isRight = false;\n                            const rad = (f.count * random * Math.PI) / 180;\n                            f.x = rad * random;\n                            f.y = Math.sin(rad) * random;\n                            this._ctx.translate(f.x, f.y);\n                            this._ctx.scale(1, 1);\n                        }\n                        else {\n                            f.isRight = true;\n                        }\n                        this._ctx.drawImage(f.image, 0, 0, f.width, f.height);\n                        this._ctx.setTransform(1, 0, 0, 1, 0, 0);\n                    });\n                    requestAnimationFrame(animation);\n                }, 1000 / this._fps);\n            };\n            animation();\n        };\n        this._canvas = document.getElementById('canvas'); // cast\n        this._ctx = this._canvas.getContext('2d');\n        this._ctx.globalCompositeOperation = 'destination-over';\n        for (let i = 0; i < this._volume; i++) {\n            this._fish.push(new Living(`f-${i}`, 50, 50));\n        }\n        for (let i = 0; i < 100; i++) {\n            const iNormlize = i % 2;\n            const randomSize = Math.random() * 100;\n            this._grass.push(new Living(`g-${iNormlize}`, randomSize, randomSize));\n        }\n        const element = document.getElementById('volume');\n        element.addEventListener('input', this.inputChange);\n        this.renderFishInfo();\n    }\n}\nconst main = new Main();\nmain.render();\n"],"names":[],"sourceRoot":""}